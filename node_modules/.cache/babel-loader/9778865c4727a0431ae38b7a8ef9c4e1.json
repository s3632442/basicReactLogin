{"ast":null,"code":"var _jsxFileName = \"/home/user/dev/rmit/cloudComputing/nodejsLogin/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { setUserSession } from \"./service/AuthService\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginUrl = \" https://kvf1xmie72.execute-api.us-east-1.amazonaws.com/prod/login\";\nconst Login = props => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username.trim() === \"\" || password.trim() === \"\") {\n      setErrorMessage(\"Both username and password are required\");\n      return;\n    }\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        \"x-api-key\": \"lTPxCTALMg85jQzsF1SD84T1gFn46xAN5ZDdWUFC\"\n      }\n    };\n    const requestBody = {\n      username: username,\n      password: password\n    };\n    axios.post(loginUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push(\"/premium-content\");\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage(\"sorry...the backend server is down!! please try again later\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"username:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \"password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+wr5Ha8xpmUpasEtOtADbSuR2HA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","setUserSession","axios","loginUrl","Login","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","data","user","token","history","push","catch","error","status","message","target","value"],"sources":["/home/user/dev/rmit/cloudComputing/nodejsLogin/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { setUserSession } from \"./service/AuthService\";\nimport axios from \"axios\";\n\nconst loginUrl =\n  \" https://kvf1xmie72.execute-api.us-east-1.amazonaws.com/prod/login\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === \"\" || password.trim() === \"\") {\n      setErrorMessage(\"Both username and password are required\");\n      return;\n    }\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        \"x-api-key\": \"lTPxCTALMg85jQzsF1SD84T1gFn46xAN5ZDdWUFC\",\n      },\n    };\n\n    const requestBody = {\n      username: username,\n      password: password,\n    };\n\n    axios\n      .post(loginUrl, requestBody, requestConfig)\n      .then((response) => {\n        setUserSession(response.data.user, response.data.token);\n        props.history.push(\"/premium-content\");\n      })\n      .catch((error) => {\n        if (error.response.status === 401 || error.response.status === 403) {\n          setErrorMessage(error.response.data.message);\n        } else {\n          setErrorMessage(\n            \"sorry...the backend server is down!! please try again later\"\n          );\n        }\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Login</h5>\n        username:{\" \"}\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n        <br />\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        <br />\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  );\n};\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,QAAQ,GACZ,oEAAoE;AAEtE,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIR,QAAQ,CAACS,IAAI,EAAE,KAAK,EAAE,IAAIP,QAAQ,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MACpDJ,eAAe,CAAC,yCAAyC,CAAC;MAC1D;IACF;IACAA,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMK,aAAa,GAAG;MACpBC,OAAO,EAAE;QACP,WAAW,EAAE;MACf;IACF,CAAC;IAED,MAAMC,WAAW,GAAG;MAClBZ,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC;IAEDN,KAAK,CACFiB,IAAI,CAAChB,QAAQ,EAAEe,WAAW,EAAEF,aAAa,CAAC,CAC1CI,IAAI,CAAEC,QAAQ,IAAK;MAClBpB,cAAc,CAACoB,QAAQ,CAACC,IAAI,CAACC,IAAI,EAAEF,QAAQ,CAACC,IAAI,CAACE,KAAK,CAAC;MACvDnB,KAAK,CAACoB,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,IAAID,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAClElB,eAAe,CAACiB,KAAK,CAACP,QAAQ,CAACC,IAAI,CAACQ,OAAO,CAAC;MAC9C,CAAC,MAAM;QACLnB,eAAe,CACb,6DAA6D,CAC9D;MACH;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEC,aAAc;MAAA,wBAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACJ,GAAG,eACb;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,QAAS;QAChB,QAAQ,EAAGO,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACkB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACI,GAAG,eACb;QACE,IAAI,EAAC,UAAU;QACf,KAAK,EAAExB,QAAS;QAChB,QAAQ,EAAGK,KAAK,IAAKJ,WAAW,CAACI,KAAK,CAACkB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,EACNtB,YAAY,iBAAI;MAAG,SAAS,EAAC,SAAS;MAAA,UAAEA;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEV,CAAC;AAAC,GA/DIN,KAAK;AAAA,KAALA,KAAK;AAgEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}